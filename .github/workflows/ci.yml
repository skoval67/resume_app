name: CI
run-name: CI

on:
  push:
    branches: [ $default-branch, master ]
  pull_request:
    branches: [ $default-branch ]
  workflow_dispatch:

jobs:
  build_backend:
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: 3.12

    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check for API changes
      run: |
        if git diff --quiet HEAD^ HEAD -- backend/; then
          echo "API_CHANGED=false" >> $GITHUB_ENV
        else
          echo "API_CHANGED=true" >> $GITHUB_ENV
        fi

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -r backend/requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E111
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      env:
        DATABASE_URL: "sqlite:///:memory:"
        JWT_SECRET: testsecret
        JWT_ALGORITHM: HS256
        ENV: DEV
      run: |
        cd backend/tests
        pytest -v

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: skoval67
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: benjlevesque/short-sha@v3.0
      with:
        length: 7
 
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: |
          ghcr.io/skoval67/resume_app/backend
        flavor: |
          latest=true
        tags: |
          type=sha,prefix=

    - name: Set branch-based environment variables
      uses: iamtheyammer/branch-env-vars@v1.2.2
      with:
        TARGET: |
          master:base
          develop:debug
          !tag:base
          !default:debug

    - name: Build and push
      if: env.API_CHANGED == 'true'
      uses: docker/build-push-action@v6
      with:
        push: true
        target: ${{ env.TARGET }}
        tags: ${{ steps.meta.outputs.tags }}
        context: backend

    - name: GHCR Pruning
      uses: vlaurin/action-ghcr-prune@v0.6.0
      with:
        token: ${{ secrets.GH_PAT }}
        user: skoval67
        container: resume_app/backend
        prune-untagged: true
        keep-last: 9
        prune-tags-regexes: |
          ^[0-9a-f]

  build_frontend:
    runs-on: ubuntu-latest
    
    permissions:
      packages: write

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for code changes
      run: |
        if git diff --quiet HEAD^ HEAD -- frontend/; then
          echo "API_CHANGED=false" >> $GITHUB_ENV
        else
          echo "API_CHANGED=true" >> $GITHUB_ENV
        fi

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: skoval67
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: benjlevesque/short-sha@v3.0
      with:
        length: 7
 
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: |
          ghcr.io/skoval67/resume_app/frontend
        flavor: |
          latest=true
        tags: |
          type=sha,prefix=

    - name: Build and push
      if: env.API_CHANGED == 'true'
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        context: frontend

    - name: GHCR Pruning
      uses: vlaurin/action-ghcr-prune@v0.6.0
      with:
        token: ${{ secrets.GH_PAT }}
        user: skoval67
        container: resume_app/frontend
        prune-untagged: true
        keep-last: 9
        prune-tags-regexes: |
          ^[0-9a-f]

  cleanup:
    needs: [build_backend, build_frontend]
    runs-on: ubuntu-latest

    permissions:
      actions: write
      contents: write

    steps:
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 2
